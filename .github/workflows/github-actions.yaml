name: ci

on:
  push:
    branches:
      - "master"
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push back
        uses: docker/build-push-action@v2
        with:
          context: ./back/
          push: true
          tags: gakgan/phy-be:latest
      - name: Build and push front
        uses: docker/build-push-action@v2
        with:
          context: ./front/
          push: true
          tags: gakgan/phy-fe:latest
      - name: Build and push front
        uses: docker/build-push-action@v2
        with:
          context: ./database/
          push: true
          tags: gakgan/dbpstgrs:latest
      - name: copy file via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: "docker-compose.yml"
          target: "/phyproject"
      - name: docker-compose pull
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: "cd /phyproject && docker-compose pull"
      - name: docker-compose up
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: "cd /phyproject && docker-compose up --force-recreate --build -d"
      - name: docker image prune
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: "docker image prune -f"